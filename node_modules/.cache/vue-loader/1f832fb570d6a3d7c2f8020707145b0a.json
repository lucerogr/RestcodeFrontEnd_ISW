{"remainingRequest":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/src/components/home.vue?vue&type=template&id=957c9522&scoped=true&","dependencies":[{"path":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/src/components/home.vue","mtime":1606402293000},{"path":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nuevo/Documents/all/APPLICACIONES-WEB/RestCodeFrontEnd_WebApplication-develop/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}